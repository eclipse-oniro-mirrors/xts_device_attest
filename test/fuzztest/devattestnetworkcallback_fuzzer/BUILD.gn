# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/features.gni")
import("//build/test.gni")
import("//test/xts/device_attest/build/devattestconfig.gni")

module_output_path = "devattest/devattest_ability"

##############################fuzztest##########################################
ohos_fuzztest("DevattestNetworkCallbackFuzzTest") {
  module_out_path = module_output_path

  fuzz_config_file = "."

  include_dirs = [
    "${devattest_innerkit_path}/native_cpp/include",
    "${devattest_path}/services/devattest_ability/include",
    "${devattest_path}/services/core",
    "${devattest_path}/services/core/include",
    "${devattest_path}/common",
    "${devattest_path}/common/log",
    "${devattest_path}/common/permission/include",
  ]

  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]

  sources = [
    "${devattest_path}/services/devattest_ability/src/devattest_network_callback.cpp",
    "${devattest_path}/services/devattest_ability/src/devattest_notification_publish.cpp",
    "devattestnetworkcallback_fuzzer.cpp",
  ]

  deps = [ "${devattest_path}/services/core:devattest_core" ]

  external_deps = [
    "ability_base:zuri",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "distributed_notification_service:ans_innerkits",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "i18n:intl_util",
    "ipc:ipc_core",
    "netmanager_base:net_conn_manager_if",
    "os_account:os_account_innerkits",
    "relational_store:native_rdb",
    "resource_management:global_resmgr",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
}
